# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint flake8 pytest
        if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Check if revision file was updated
      if: github.event_name == 'push' && contains(github.event.commits[0].added, 'revision.txt')
      run: |
        echo "Revision file was updated, generating new release..."
    - name: Generate release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.workspace }}/revision.txt
        release_name: ${{ github.workspace }}/revision.txt
        body: ${{ github.workspace }}/revision.txt
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}